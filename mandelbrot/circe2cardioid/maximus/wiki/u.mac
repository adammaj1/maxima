/*

 batch file for maxima

http://mathr.co.uk/blog/2013-12-16_stretching_cusps.html
Claude Heiland-Allen
transformation from line, thru half of the circle, to half of the cardioid 

there are 3 complex planes :
* z-plane ( where are lines) = k-plane in Claude Heiland-Allen notation
* w-plane ( where are circles)
* c-plane ( for cardioid )

Start from z plane 
go to w plane : w=fi(z)
and to the c plane : c = gi(w) 

*/

kill(all);
remvalue(all);


/*

*/

z1:0;
z2:1;
/* z3:infinity;  z3 must be infinity */
zMax: 10.5; /* zMax << z3=infinity */

z_points:[z1,z2];
/* z_points2:[z1+%i,z2+%i]; */

/* 3 points on the unit hemicircle */
w1:-1;
w2:%i;
w3:1;
w_points:[w1,w2,w3];

iMax:100; /* number of points to draw */
dz:abs(zMax-z1)/iMax; /* z step */


/* =================== functions ============ */

/* 
ray { z : z<=0 and imagpart(z)=0 }  to unit hemicircle where 0<= t <= pi
*/
fi(z):=(-%i-z)/(%i-z);

 /* conformal map from  circle to cardioid  */
 gi(w):=(1-(w+1)^2)/4; 

/* check */
gfi(z):=gi(fi(z));

/* converts complex number into list for draw package  */
 draw_format(z):= [realpart(z),imagpart(z)];



compile(all);




/* point to point method of drawing */

/* compute first point of curve, create list and save point to this list */
  
 z:z1;    
 LineList:[z]; 
 for i:1 thru iMax step 1 do
  (  z:z+dz,
     LineList:cons(z,LineList)
 );

 z:z1+%i;
 LineList2:[z]; 
 for i:1 thru iMax step 1 do
  (  z:z+dz,
     LineList2:cons(z,LineList2)
 );



/* mapping from  line to hemi circle */
 CircleList: map(fi, LineList) $
/* CircleList2: map(fi, LineList2) $ */

/* conformal mapping from  circle to cardioid */
 CardioidList: map(gi, CircleList) $
 /*CardioidList2: map(gi, CircleList2) $ */
 c_points: map(gi, w_points) $

/* convert list to draw format */

 LineList:map(draw_format,LineList)$ 
 z_points: map(draw_format, z_points) $

  LineList2:map(draw_format,LineList2)$ 
 /*z_points2: map(draw_format, z_points2) $*/

 CircleList:map(draw_format,CircleList)$ 
 w_points: map(draw_format, w_points) $

/* CircleList2:map(draw_format,CircleList2)$  */

 CardioidList:map(draw_format, CardioidList)$
 /* CardioidList2:map(draw_format, CardioidList2)$ */
 c_points: map(draw_format, c_points) $

/* draw */

path:"~/maxima/batch/mandelbrot/circe2cardioid/maximus/wiki/"$ /* pwd  */
 FileName:"a4"$ /* without extension which is the terminal name */

 load(draw); /* Mario RodrÃ­guez Riotorto   http://www.telefonica.net/web2/biomates/maxima/gpdraw/index.html */
 draw(
  terminal  = 'svg,
  file_name = concat(path,FileName),
  columns  = 3,
  dimensions=[1000,333], /*  x = y*columns  */
  
  gr2d(title = " ray ",
   /* xrange = [0,3],  */
   points_joined =true,
   color         = green,
   point_size    = 0.5,
   point_type = filled_circle,
   points(LineList),
   points(LineList2), 
   points_joined =false,
   point_type    = filled_circle,
   color         = black,
   point_size    = 1.0,
   points(z_points)
   /* ,points(z_points2) */
   ),

  gr2d(title = " circle = image(ray) = {w: w = fi(z) = (-%i-z)/(%i-z)",
   points_joined =true,
   color         = red,
   point_size    = 0.5,
   point_type = filled_circle,
   points(CircleList),
  /* points(CircleList2), */
   points_joined =false,
   point_type    = filled_circle,
   color         = black,
   point_size    = 1.0,
   points(w_points)),

  gr2d(title      = "cardioid = image(circle) = {c: c = gi(w) = (1-(w+1)^2)/4 } ",
   points_joined =true,
   color         = blue,
   point_size    = 0.5,
   point_type = filled_circle,
   points(CardioidList),
   /*points(CardioidList2), */
   points_joined =false,
   point_type    = filled_circle,
   color         = black,
   point_size    = 1.0,
   points(c_points))

 );



